{{> dashHeader }}
{{> dashSidebar }}
<!-- MAIN START -->
<main>
    <div class="container">
        {{!-- Breadcrumbs --}}
        <div class="curso_breadcrumbs">
            <div class="breadcrumbs">
                <ul>
                    <li><a href="/dashboard">Home</a></li>
                    <li><a href="/dashboard/cursos">Cursos</a></li>
                    <li><a href="/dashboard/cursos/detalhes/{{ curso.id }}">Detalhes</a></li>
                    <li><a href="#">Atualizar</a></li>
                </ul>
            </div>
        </div>

        <div class="newCourse_container">
            <h2>Publicar Curso</h2>
            {{!-- FORM --}}
            <form id="newCourseForm" enctype="multipart/form-data">
                <div class="row">
                    {{!-- TITLE --}}
                    <div class="col-11 col-md-5 container-fluid">
                        <label for="title">Título: <span>*</span></label>
                        <input type="text" name="title" id="title" value=" {{ curso.name }}" required>
                    </div>
                    {{!-- CATEGORY --}}
                    <div class="col-11 col-md-5 container-fluid">
                        <label for="category">Escolha uma Categoria: <span>*</span></label>
                        <select name="category" id="category" required>
                            <option value="{{ curso.categoria.name }}" selected> {{ curso.categoria.name }} </option>
                            {{#each categorias}}
                                <option value="{{ id }}"> {{ name }} </option>
                            {{/each}}
                        </select>
                    </div>
                    {{!-- COUST --}}
                    <div class="col-11 col-md-5 container-fluid">
                        <label for="coust">Custo: </label>
                        <input type="text" name="coust" id="coust" value=" {{ curso.custo }}">
                        <p>Opcional</p>
                    </div>
                    {{!-- NIVEL --}}
                    <div class="col-11 col-md-5 container-fluid">
                        <label for="nivel">Nível: </label>
                        <input type="text" name="nivel" id="nivel" value="{{ curso.nivel }}">
                        <p>Opicional</p>
                    </div>
                    {{!-- MODULE --}}
                    <div class="col-12  container-fluid" id="moduleAdd">
                        <div id="module">
                            {{!-- Module content goes here --}}
                        </div>
                        <button type="button" id="moduleDelete">
                            <i class="bi bi-trash3"></i></i> Eliminar
                        </button>
                        <button type="button" id="moduleButton">
                            <i class="bi bi-plus-circle"></i> Modulo
                        </button>
                    </div>
                    {{!-- PLAYLIST --}}
                    <div class="col-11 col-md-5 container-fluid">
                        <div id="playlistStatus">
                            <label for="playlist">Playlist: </label>
                            <input type="text" name="playlist" id="playlist1" value="{{ curso.playlist }}">
                        </div>
                    </div>
                    {{!-- DATE --}}
                    <div class="col-11 col-md-5 container-fluid">
                        <label for="date">Publicado em: <span>*</span></label>
                        <input type="date" name="date" id="date" value="{{ curso.data }}" required>
                    </div>
                    {{!-- DESCRIPTION --}}
                    <div class="col-11 col-md-8 container-fluid">
                        <label for="description">Descrição: <span>*</span> </label>
                        <textarea name="description" id="description" rows="7"
                            required> {{ curso.descricao }} </textarea>

                    </div>

                    {{!-- IMG --}}
                    <div class="col-11 col-md-8 container-fluid">
                        <label for="img"> Escolha uma imagem: <span>*</span></label>
                        <input type="file" name="img" id="img">
                    </div>

                    {{!-- Submit --}}
                    <button type="submit">Atualizar</button>
                </div>
                {{!-- ROW END --}}
            </form>
            {{!-- FORM END --}}
        </div>

    </div>
    {{!-- END CONTAINER --}}
</main>
<!-- MAIN END -->

<!-- SCRIPT START -->
<script>

    const module = document.getElementById('module');
    const moduleContainer = document.getElementById('moduleContainer');
    const moduleButton = document.getElementById('moduleButton');
    const playlistStatus = document.getElementById('playlistStatus');
    const moduleDelete = document.getElementById('moduleDelete');
    const playlist1 = document.getElementById('playlist1');

    // THIS BLOCK GOING TO FIRE ONLY IF THERE IS MODULES IN A COURSE 
    if({{ thereIsModule }}) {

         //STAP 1: Turn invisble the playlist
        playlistStatus.style.display = 'none';
        playlist1.setAttribute('name', 'nothing');

         // Module count
        const moduleCount = parseInt(module.childElementCount) + 1;

        // STAP 2 ===========================================
            // Create module container div
            const moduleContainer = document.createElement("div");
            // Set Attribute to module container
            moduleContainer.setAttribute("class", "row");
            moduleContainer.setAttribute("id", "moduleContainer");

            
           

        {{#each curso.modulos}}
            console.log('{{ nome }}');

            // Create subtitle for module
            const subtitle{{ ordem }} = document.createElement('h5');
            // Create text
            const subtitleText{{ ordem }} = document.createTextNode(`Module {{ ordem }}`);
            // Insert text into subtile
            subtitle{{ ordem }}.appendChild(subtitleText{{ ordem }});

            // ********** Insert subtitle into module container
            moduleContainer.append(subtitle{{ ordem }});

            
            // STAP 3 ===========================================
            // Create nomeContainer for module
            const nomeContainer{{ ordem }} = document.createElement('div');
            // Set Attribut for nomeContainer
            nomeContainer{{ ordem }}.setAttribute("class", "col-11 col-md-5 container-fluid");
        
            // Create lable for nomeContainer
            const nomeLabel{{ ordem }} = document.createElement('label');
            // set Atrribute form nomeLabel
            nomeLabel{{ ordem }}.setAttribute("for", "moduleName")
            // Create text for nomeLabel
            const nomeLabelText{{ ordem }} = document.createTextNode('Título do modulo:');
            // Insert nomeLabelText into nomeLabel
            nomeLabel{{ ordem }}.appendChild(nomeLabelText{{ ordem }});
            // Insert label to nomeContainer
            nomeContainer{{ ordem }}.append(nomeLabel{{ ordem }});

            // Create input for nomeContainer 
            const nomeInput{{ ordem }} = document.createElement("input");
            //Create input for order
            const order{{ ordem }} = document.createElement("input");
            // Set Attribute to nomeInput
            nomeInput{{ ordem }}.setAttribute("type", "text");
            nomeInput{{ ordem }}.setAttribute("name", "moduleName");
            nomeInput{{ ordem }}.setAttribute("id", "moduleName");
            nomeInput{{ ordem }}.setAttribute("value", "{{ nome }}");

            // Set Attribute for order
            order{{ ordem }}.setAttribute("type", "text");
            order{{ ordem }}.setAttribute("hidden", "true");
            order{{ ordem }}.setAttribute("name", "order");
            order{{ ordem }}.setAttribute("value", "{{ ordem }}");


            // Insert nomeInput into nomeContainer
            nomeContainer{{ ordem }}.append(nomeInput{{ ordem }});
            nomeContainer{{ ordem }}.append(order{{ ordem }});

            // ********* Insert nomeContainer into moduleContainer
            moduleContainer.append(nomeContainer{{ ordem }});



            // STAP 3 ===========================================
        // Create playlistContainer
        const playlistContainer{{ ordem }} = document.createElement("div");
        // Set Attribut for playlistContainer
        playlistContainer{{ ordem }}.setAttribute("class", "col-11 col-md-5 container-fluid");

        // Create lable for playlistContainer
        const playlistLabel{{ ordem }} = document.createElement('label');
        // set Atrribute form playlistLabel
        playlistLabel{{ ordem }}.setAttribute("for", "modulePlaylist")
        // Create text for playlistLabel
        const playlistLabelText{{ ordem }} = document.createTextNode('Playlist:');
        // Insert playlistLabelText into playlistLabel
        playlistLabel{{ ordem }}.appendChild(playlistLabelText{{ ordem }});
        // Insert label to playlistContainer
        playlistContainer{{ ordem }}.append(playlistLabel{{ ordem }});

        // Create input for playlistContainer 
        const playlistInput{{ ordem }} = document.createElement("input");
        // Set Attribute to playlistInput
        playlistInput{{ ordem }}.setAttribute("type", "text");
        playlistInput{{ ordem }}.setAttribute("name", "playlist");
        playlistInput{{ ordem }}.setAttribute("id", "modulePlaylist");
        playlistInput{{ ordem }}.setAttribute("value", "{{ playlist }}");
        // Insert playlistInput into playlistContainer
        playlistContainer{{ ordem }}.append(playlistInput{{ ordem }});

        // ********* Insert playlistContainer into moduleContainer
        moduleContainer.append(playlistContainer{{ ordem }});

        // FINAL STAP =======================================
        // Insert the module container into moduleAdd div
        module.append(moduleContainer);

        const delMod{{ ordem }} = document.createElement('button');
        delMod{{ ordem }}.setAttribute("id", "deleteItem");
        const icon{{ ordem }} = document.createElement("i");
        icon{{ ordem }}.setAttribute("class", "bi bi-trash3");
        const delText{{ ordem }} = document.createTextNode("Eliminar");
        delMod{{ ordem }}.append(icon{{ ordem }});
        delMod{{ ordem }}.append(delText{{ ordem }});

        const box{{ ordem }} = document.createElement("div");
        box{{ ordem }}.setAttribute("class", "box{{ ordem }} col-11 col-md-11 container-fluid");
        box{{ ordem }}.append(delMod{{ ordem }});    

        moduleContainer.append(box{{ ordem }});                            
                 
        // Delete item event
       delMod{{ ordem }}.addEventListener("click", ()=> {
            playlistContainer{{ ordem }}.style.display = "none";
            nomeContainer{{ ordem }}.style.display = "none";
            delMod{{ ordem }}.style.display = "none";
            subtitle{{ ordem }}.style.display = "none";
       })

        {{/each}}
    }





    // ADD EVENT TO THE moduleButton ===============================================================
    moduleButton.addEventListener('click', () => {

        // Turn invisble the playlist
        playlistStatus.style.display = 'none';
        playlist1.setAttribute('name', 'nothing');

        // Module count
        const moduleCount = parseInt(module.childElementCount) + 1;


        // STAP 1 ===========================================
        // Create module container div
        const moduleContainer = document.createElement("div");
        // Set Attribute to module container
        moduleContainer.setAttribute("class", "row");
        moduleContainer.setAttribute("id", "moduleContainer");

        // Create subtitle for module
        const subtitle = document.createElement('h5');
        // Create text
        const subtitleText = document.createTextNode(`Module ${moduleCount}`);
        // Insert text into subtile
        subtitle.appendChild(subtitleText);

        // ********** Insert subtitle into module container
        moduleContainer.append(subtitle);

        // STAP 2 ===========================================
        // Create nomeContainer for module
        const nomeContainer = document.createElement('div');
        // Set Attribut for nomeContainer
        nomeContainer.setAttribute("class", "col-11 col-md-5 container-fluid");

        // Create lable for nomeContainer
        const nomeLabel = document.createElement('label');
        // set Atrribute form nomeLabel
        nomeLabel.setAttribute("for", "moduleName")
        // Create text for nomeLabel
        const nomeLabelText = document.createTextNode('Título do modulo:');
        // Insert nomeLabelText into nomeLabel
        nomeLabel.appendChild(nomeLabelText);
        // Insert label to nomeContainer
        nomeContainer.append(nomeLabel);

        // Create input for nomeContainer 
        const nomeInput = document.createElement("input");
        //Create input for order
        const order = document.createElement("input");
        // Set Attribute to nomeInput
        nomeInput.setAttribute("type", "text");
        nomeInput.setAttribute("name", "moduleName");
        nomeInput.setAttribute("id", "moduleName");
        nomeInput.setAttribute("placeholder", "Escolha um título");

        // Set Attribute for order
        order.setAttribute("type", "text");
        order.setAttribute("hidden", "true");
        order.setAttribute("name", "order");
        order.setAttribute("value", `${moduleCount}`);


        // Insert nomeInput into nomeContainer
        nomeContainer.append(nomeInput);
        nomeContainer.append(order);

        // ********* Insert nomeContainer into moduleContainer
        moduleContainer.append(nomeContainer);

        // STAP 3 ===========================================
        // Create playlistContainer
        const playlistContainer = document.createElement("div");
        // Set Attribut for playlistContainer
        playlistContainer.setAttribute("class", "col-11 col-md-5 container-fluid");

        // Create lable for playlistContainer
        const playlistLabel = document.createElement('label');
        // set Atrribute form playlistLabel
        playlistLabel.setAttribute("for", "modulePlaylist")
        // Create text for playlistLabel
        const playlistLabelText = document.createTextNode('Playlist:');
        // Insert playlistLabelText into playlistLabel
        playlistLabel.appendChild(playlistLabelText);
        // Insert label to playlistContainer
        playlistContainer.append(playlistLabel);

        // Create input for playlistContainer 
        const playlistInput = document.createElement("input");
        // Set Attribute to playlistInput
        playlistInput.setAttribute("type", "text");
        playlistInput.setAttribute("name", "playlist");
        playlistInput.setAttribute("id", "modulePlaylist");
        playlistInput.setAttribute("placeholder", "https://");
        // Insert playlistInput into playlistContainer
        playlistContainer.append(playlistInput);

        // ********* Insert playlistContainer into moduleContainer
        moduleContainer.append(playlistContainer);

        // FINAL STAP =======================================
        // Insert the module container into moduleAdd div
        module.append(moduleContainer);

        // CONDITIONAL ISSUES
        if (moduleCount > 0) {
            moduleDelete.style.display = 'block';

        } else {
            moduleDelete.style.display = 'none';
        }


        //alert(module.childElementCount)

    })

    // ADD EVENT TO moduleDelete ======================================================================
    moduleDelete.addEventListener('click', () => {
        const lastModule = module.lastElementChild;
        const moduleCount = parseInt(module.childElementCount);
        playlist1.setAttribute('name', 'playlist');

        // Remove the last Module
        lastModule.remove()

        // Conditional issue
        if (moduleCount == 1) {
            moduleDelete.style.display = 'none';
            playlistStatus.style.display = 'block';

        } else {
            moduleDelete.style.display = 'block';
        }
    })
</script>
<!-- SCRIPT END -->

<!-- SCRIPT FOR SEARCH START -->
<script>
    const form = document.getElementById('newCourseForm');

    // ADD EVENT TO A FORM =======================================
    form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // FECTH ===============
        try {
            const url = "/dashboard/cursos/atualizar/send/{{ curso.id }}";
            const data = new FormData(form);
            // Fectch
            const response = await fetch(url, {
                method: "PUT",
                body: data,
            });

            const result = await response.json();
            console.log(result);

            if (result.message) {
                location.assign('/dashboard/cursos/detalhes/{{ curso.id }}')
            }

        } catch (err) {
            console.log(err);
        }

    });
</script>
<!-- SCRIPT FOR SEARCH END -->


{{> dashFooter }}