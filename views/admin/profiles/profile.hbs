{{> dashHeader }}
{{> dashSidebar }}
<!-- MAIN START -->
<main>
    <div class="container">
        {{!-- Breadcrumbs --}}
        <div class="profile_breadcrumbs">
            <div class="breadcrumbs">
                <ul>
                    <li><a href="/dashboard">Home</a></li>
                    <li><a href="#">Meu Perfil</a></li>
                </ul>
            </div>
        </div>

        <div class="profile_container">
            <div id="alertMessage">Lorem ipsum dolor sit amet consectetur adipisicing elit. Itaque, ratione!</div>
            <div class="row">
                {{!-- First page --}}
                <div class="profile_card col-11 col-md-6 col-lg-4 container-fluid">
                    <div class="profile">
                        <div class="pf_banner">
                            <img src="/admin/img/profile/bn2.jpg" alt="Banner do perfil do usário">
                        </div>
                        <img src="/admin/img/user.jpg" alt="Fotografia do perfil do usário" class="pf_img">
                        <h3> {{ profile.nome }} </h3>
                        <p> {{ profile.email }} </p>
                        <button id="pf_edit_call">Editar perfil</button>
                    </div>
                </div>
                {{!-- Second page --}}
                <div class="profile_edit col-11 col-md-5 col-lg-4 container-fluid">
                    {{!-- Back buttom --}}
                    <button id="edit_back"><i class="bi bi-arrow-left"></i></button>

                    <form id="imgForm">
                        <label for="img">Alterar a foto do perfil:</label>
                        <input type="file" name="img" id="img" accept="image/*">
                        <input type="submit" value="salvar" class="submit_btn">
                    </form>
                    <form id="nameForm">
                        <label for="name">Nome:</label>
                        <input type="text" name="name" id="name" value="{{ profile.nome }}">
                        <input type="submit" value="salvar" class="submit_btn">
                    </form>
                    {{!-- Email --}}
                    <form id="emailForm">
                        <label for="email">Email</label>
                        <input type="email" name="email" id="email" value="{{ profile.email }}">
                        <input type="submit" value="salvar" class="submit_btn">
                    </form>

                    {{!-- Alter PSW button --}}
                    <button id="aleter_psw" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Alterar a
                        senha</button>

                    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false"
                        tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Alterar a senha</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    {{!-- Old PSW --}}
                                    <form id="pswForm">
                                        <div id="pw_msg"> </div>
                                        <label for="hold_psw">Senha antiga:</label>
                                        <input type="password" name="hold_psw" id="hold_psw" placeholder="Senha...">
                                        <input type="submit" value="salvar" class="submit_btn">
                                    </form>
                                    {{!-- New PSW --}}
                                    <form id="newpswForm">
                                        <div id="pw_msg1"> </div>
                                        <label for="new_psw">Nova senha:</label>
                                        <input type="password" name="new_psw" id="new_psw" placeholder="Senha...">
                                        <label for="confirm">Confirmar Senha:</label>
                                        <input type="password" name="confirm" id="confirm" placeholder="Senha..."
                                            required>
                                        <input type="submit" value="salvar" class="submit_btn">

                                    </form>
                                    <div id="pwUpdated"></div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                {{!-- Email confirmation --}}
                <div id="emailConfirm2" class="col-11 col-md-7 col-lg-5 container-fluid edit_conf_email">
                    <button id="back2"><i class="bi bi-arrow-left"></i></button>
                    <h2>Verificação de Email</h2>
                    <div class="row">
                        <div id="alertVerification2"></div>
                        <div class=" container-fluid">
                            <p>Enviamos um codigo de Verificação no seu email. Introduza o codigo enviado:</p>

                            <form id="verifyForm3">
                                <input type="number" name="code3" id="code3">
                                <button type="submit">Enviar</button>
                            </form>
                            {{!-- <a href="#">Reenviar o codigo de Verificação.</a> --}}
                        </div>
                    </div>
                </div>

                {{!-- Activities --}}
                <div class="profile_info col-11 col-md-6 col-lg-6 container-fluid">
                    <div class="profile_activity">
                        <h2>Atividades</h2>
                        <ul>
                            <li>Projetos publicados: <span>0</span></li>
                            <li>Projetos participados: <span>0</span></li>
                            <li>Cursos publicados: <span>0</span></li>
                            <li>Cursos participados: <span>0</span></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>


    </div>
</main>
<!-- MAIN END -->

<script>
    // Settings =======================================
    const pf_edit_call = document.getElementById('pf_edit_call');
    const profile_card = document.getElementsByClassName('profile_card')[0];
    const profile_edit = document.getElementsByClassName('profile_edit')[0];
    const edit_back = document.getElementById('edit_back');
    const aleter_psw = document.getElementById('aleter_psw');
    const pswForm = document.getElementById('pswForm');
    const pw_msg = document.getElementById('pw_msg')
    const pw_msg1 = document.getElementById('pw_msg1')
    const newpswForm = document.getElementById('newpswForm')
    const pwUpdated = document.getElementById('pwUpdated')
    pw_msg.style.display = 'none'
    pw_msg1.style.display = 'none'
    newpswForm.style.display = 'none'
    pwUpdated.style.display = 'none'


    const emailConfirm2 = document.getElementById('emailConfirm2')
    const verifyForm3 = document.getElementById('verifyForm3')
    const alertVerification2 = document.getElementById('alertVerification2')
    const alertMessage = document.getElementById('alertMessage')
    emailConfirm2.style.display = 'none'
    alertVerification2.style.display = 'none'
    alertMessage.style.display = 'none'

    const nameForm = document.getElementById('nameForm')
    const emailForm = document.getElementById('emailForm')

    // Editng Profile Logics ===========================================
    pf_edit_call.addEventListener('click', () => {

        profile_card.style.width = '0px'
        setTimeout(() => {
            profile_card.style.display = 'none'
            profile_edit.style.display = 'block'
        }, 400)
        profile_edit.style.width = '400px'


    })

    edit_back.addEventListener('click', () => {

        profile_edit.style.width = '0px'
        setTimeout(() => {
            profile_edit.style.display = 'none'
            profile_card.style.display = 'block'
            window.location.reload()
        }, 400)
        profile_card.style.width = '400px'
    })

    //Chanhe password
    pswForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        try {
            const psw = pswForm.hold_psw.value;
            const data = { password: psw }
            const path = '/dashboard/user/profile/update_profile/{{ profile.id }}'
            const response = await fetch(path, {
                method: 'PUT',
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            })
            const result = await response.json();

            if (result.id == 1) {

                pswForm.style.display = 'none'
                newpswForm.style.display = 'block'

                newpswForm.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const password = newpswForm.new_psw.value
                    const confirm = newpswForm.confirm.value
                    if (password.length < 6) {
                        pw_msg1.style.display = 'block';
                        pw_msg1.innerText = 'A senha não pode conter menos de 6 caracteres!'

                    } else {
                        if (confirm !== password) {
                            pw_msg1.style.display = 'block';
                            pw_msg1.innerText = 'A senha de confirmação não pode ser diferente!'
                        } else {
                            const data2 = { newPassword: password }
                            try {
                                const path = '/dashboard/user/profile/update_profile/{{ profile.id }}'
                                const response2 = await fetch(path, {
                                    method: 'PUT',
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    body: JSON.stringify(data2),
                                })
                                const result2 = await response2.json();

                                if (result2) {
                                    pwUpdated.innerHTML = result2.message
                                    pwUpdated.style.display = 'block'
                                    newpswForm.style.display = 'none'

                                }
                            } catch (err) {
                                console.log(err)
                            } // end catch

                        }
                    } // ene else

                })

            } else {
                pw_msg.style.display = 'block';
                pw_msg.innerText = result.message
            }


        } catch (err) {
            console.error(err.message)
        }
    })

    // Name form

    nameForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const name = nameForm.name.value
        const data = { name: name }
        console.log(name)

        try {

            const path = '/dashboard/user/profile/update_profile/{{ profile.id }}'
            const response = await fetch(path, {
                method: 'PUT',
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            })
            const result = await response.json();
            if (result) {
                alertMessage.style.display = 'block'
                alertMessage.innerHTML = result.message

                setTimeout(() => {
                    alertMessage.style.display = 'none'
                }, 3000)
            }

        } catch (err) {
            console.log(err)
        }
    })

    // Email Form
    emailForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const email = emailForm.email.value
        const data = { email: email }

        //Check if the email changes
        if (email !== '{{ profile.email }}') {

            profile_edit.style.display = 'none'
            emailConfirm2.style.display = 'block'
            alertVerification2.style.display = 'none'

            // FIRST FETCH
            try {

                const path = '/dashboard/user/profile/email_verification/{{ profile.id }}'
                const response = await fetch(path, {
                    method: 'PUT',
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data),
                })
                const result = await response.json();

                console.log(result)
                // SECONDE AND NESTED EVENTELISTENER
                verifyForm3.reset()
                verifyForm3.addEventListener('submit', async (e) => {
                    e.preventDefault()
                    const code3 = verifyForm3.code3.value;
                    if (code3 == result.verificationCode) {

                        //SECONDE FETCH
                        try {
                            const path = '/dashboard/user/profile/update_profile/{{ profile.id }}'
                            const response = await fetch(path, {
                                method: 'PUT',
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify(data),
                            })
                            const result = await response.json();

                            if (result.status == 'sucess') {
                                emailConfirm2.style.display = "none"
                                profile_edit.style.display = 'block'
                                alertMessage.style.display = 'block'
                                alertMessage.innerHTML = result.message

                                setTimeout(() => {
                                    alertMessage.style.display = 'none'
                                }, 3000)

                            } else {
                                emailConfirm2.style.display = "none"
                                profile_edit.style.display = 'block'

                                alertMessage.style.background = 'rgb(250, 21, 21)'
                                alertMessage.style.border = 'rgb(250, 21, 21)'
                                alertMessage.style.display = 'block'
                                alertMessage.innerHTML = result.message

                                setTimeout(() => {
                                    alertMessage.style.display = 'none'
                                }, 4000)
                            }


                        } catch (err) {
                            console.log(err)
                        }
                    } else {

                        alertVerification2.style.display = 'block'
                        alertVerification2.innerHTML = 'O código está errado ou espirou'
                    }



                })
                // SECOND and NESTED FETCH


            } catch (err) {
                console.log(err)
            }

        }
    })

    back2.addEventListener('click', () => {
        emailConfirm2.style.display = "none"
        profile_edit.style.display = 'block'

    })

</script>

{{> dashFooter }}