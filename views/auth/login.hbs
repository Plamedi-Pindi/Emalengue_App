{{> header }}
<!-- MAIN START -->
<main class="cadastro_form">
    <div class="container">
        <div class="form_container">
            <h2>Login</h2>
            <form class="row" id="login_form">
                <div class="col-10 col-md-10 container-fluid">


                    <label for="email">Email:</label>
                    <input type="email" name="email" id="login_email" class="form-control" placeholder="...@gmail.com">
                    <div id="email_warnig1"></div>

                    <label for="password">Senha:</label>
                    <input type="password" name="password" class="form-control" placeholder="Senha" id="login_password">
                    <div id="password_warnig1"></div>
                </div>

                <input type="submit" class="btn btn-primary" value="Login">
            </form>
        </div>
    </div>
</main>
<!-- MAIN END -->

<script>

    const password_warnig1 = document.getElementById('password_warnig1')
    const email_warnig1 = document.getElementById('email_warnig1')
    password_warnig1.style.display = 'none'
    email_warnig1.style.display = 'none'

    const loginForm = document.getElementById("login_form")

    /** 
        Este bloco contém eventos que serão executados somente
        quando for disparado uma submicção no formuláio de login
    */
    loginForm.addEventListener('submit', async (e) => {
        e.preventDefault()

        // Variáveis que captam os campos do formulário de login
        const email = loginForm.email.value
        const password = loginForm.password.value

        /**
         Esta seção li dá com o trtamentos de reeos
         Verifica se a quantidade de digito para a senha é >= a 6, caso contrário nao dubmete os dados.
         E também permite fazer a submissão dos dados ao servidor.
         bem como reseber as infomações que de lá vêm por meio de json
         */
        if (password.length < 6) {
            e.preventDefault()
            password_warnig1.style.display = 'block'
            password_warnig1.innerHTML = "Senha não pode conter menos de 6 carateres"
        } else {

            password_warnig1.style.display = 'none'
            email_warnig1.style.display = 'none'

            // Inicio de requisições ao servidor usando o fetch
            try {
                const response = await fetch('/login/verificacao', {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ password, email })
                })

                const result = await response.json()
                /** 
                 Cada erro identificado pelo servidor no ato de login foi lhes aplicado um identificador
                 e o conteudo que é a mensagem que informa o problema.
                 Estas informações é captada pela variavel "result" que recebe um objeto json do
                 servidor para exibir no front-end

                 result[0] »» Capta o id do erro na inserção dos dados. 
                 se id = 1 implica que o erro vem da senha
                 se id = 2 implica que o erro vem do email

                 result[1] »» Permite receber o conteúdo da mensagem que explica o tipo de erro ao usuario
                */
                if (result[0] === 1) {
                    password_warnig1.style.display = 'block'
                    password_warnig1.innerHTML = result[1]
                }
                else if(result[0] === 2){
                    email_warnig1.style.display = 'block'
                    email_warnig1.innerHTML = result[1]
                }
                else if(result.user) {
                    location.assign('/')
                }

            } catch (err) {
                // Lida com erros da requisição
                console.log('Fetch error: ' + err)
            }

        }


    })


</script>
{{> footer }}